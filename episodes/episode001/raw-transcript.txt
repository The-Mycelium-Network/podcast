Welcome to the Mycelium Network Podcast, a podcast all about early stage web
developers and the mentors and teachers that helped him along the way.
Today, we are going to have a chat with Ricky Smit.
He is some of the people that joined the Mycelium Network very early on and has been
pretty active on the community.
So I thought it only appropriate to have him as one of the first guests.
Hey, Ricky.
Welcome to the podcast.
Thanks for having me.
It's a pleasure.
So I've seen some of these questions to you beforehand, just so you can be a
little bit more prepared, but we'll off the cuff some things here and there.
No pressure.
It's just an informal chat to just learn what works, what doesn't work,
what's the challenges you're facing and how the mentors that I speak
with can potentially help.
So to get us off to a start, tell us a bit about your background.
What did you do up to now and what made you look into getting into software
or web development specifically?
Well, since I was born and raised here in Pretoria, my uncle has been
very heavy into technology.
So ever since I lived, I was little, I remember standing by him, seeing
what he's doing and that intrigued me from a young age.
And then throughout high school, I had the opportunity to take IT and
actually discover the love for coding.
And I had a chance to get all of the fundamentals down.
But as soon as that all ended, I had to basically walk out into a job.
I worked in retail for a hardware shop.
I did what I had to do to survive, but it's not what I wanted to do.
I always had this feeling like I want to do something else.
The first course I had with you, actually, I actually realized how much
I love web development above stuff like app development or server working
or security, stuff like that.
I actually realized I really love working with web, creating pages,
designing new things.
I just fall in love with it.
That's great.
So yeah, I'm looking to study now.
At the end of the day, I would like to be a full stack developer,
being able to do everything and anything that is necessary.
So it's good too.
I think it's good to have that as a goal.
But what I do find is they talk about being T-shaped in terms of your skills.
So you have a broad knowledge base, but then you have something that you focus on.
For myself personally, I do know about backend development and I've done stuff
and I keep doing stuff in that region, like Python a little bit and even
databases, like the old relational kind of stuff, I say old, but people definitely
still use relational databases today.
But I definitely have the T of my T-shape is definitely focused on frontend
development and like, as they say, front of the front.
So I like the design aspects and I like the CSS and making things look good
and work well and performance, accessibility.
Those things are really important to me.
So I think it's good to have that broader perspective of what happens in the
industry, but it's always nice to have something that's more your focus area.
Be a really go deep, as they say that.
So you have this breadth and then you have depth in a certain area.
But that's great.
Yeah.
I know for myself also, I also got into web development from a music background.
For me, the nice thing about web in the early days with Flash and that was still
around was that it had this thing where I could like take the musical aspect and
the design aspect and like take a little bit of programming and like mix them all.
And because we used to make these Flash intros, which are like little movies that
used to play before you'd actually go into the website, really the little movie
with like text and animation and whatnot.
And then it would say, click to enter.
That used to be a huge thing back in the day.
So, you know, I understand like starting something and then being bitten by this
web thing and really digging into it.
So is there something you wanted to expand though?
I must say I am more interested in the front end side of things.
It feels like I would like to know the back end part to make things simpler if
you do get stuck.
But I must definitely say I'm more interested in front end development.
I don't really find PHP interesting.
I hate SQL.
We had to do some in high school.
I absolutely hate it.
Yeah.
Yeah, no, it's, it's a journey.
It is for sure.
So now we know you about your background and how you came to where you are and
what you're looking to do for your future.
Like you mentioned, one of the main things you need to do is learn.
So as you're learning, what, which resources have you like really come to depend on?
I've got three, actually four now.
I really like the input I should get from you.
If we get together, I have a chat about things that's going on and places to find
things to help the development further.
VS code has gotten very essential for me.
It is, I try it sublime text.
It is very bare-boned and feels like amazing if you have a laptop and
javelin round and you have a moment to open up and edit something.
And it's also very, very, it's a lot smaller than VS code.
So it's easier for me to carry around on a flash drive.
So having Git actually is amazing just using GitHub in general because where I am,
I would be able to download my current project.
I'd be able to open it in sublime and work on it.
But when I'm home, I prefer to use GitHub to download my updates and everything and
then work through the VS code.
And funny enough, YouTube is very essential to me.
I struggled to certainly read through a document of pages and pages.
I just can't.
So for me, I like YouTube, someone telling you do this, this, and this, and then they
type it out.
So you can actually pause and go do it yourself and then rinse and rinse until you get the
hang of whatever you're doing.
Yeah, yeah, yeah.
Yeah, no, I agree.
There's definitely different modalities that work better for some people.
That is why with the 150 days of HTML thingy that I'm putting together, I have incorporated
video into the pages now so that if you're more of a video person, you can like listen
to me talk through the content, but you have the content just below you as a reference.
I think that that for me is something that I have understood more and more is giving
people different ways to consume the same content because not everybody learns the same
way.
Is there anybody specifically on YouTube that you want to give a shout out to that you find
is particularly good?
Now you're asking me a question half.
I do know his name.
I just want to retrieve it.
If I remember correctly, it's Mosch and he has a lot of coding tutorials online.
His entire teaching style, the way he talks, explains, all of the little graphs and things
he uses is amazing.
I just really like learning this from this guy in particular.
That's great.
I'm trying to just get his name right now.
If I remember correctly, it's Mosch.
Sounds familiar.
I think you've mentioned him to me as well.
One big problem I'm actually running into as a new developer is finding the information
I need.
So more often than not, I find myself asking what's next.
I don't know what to learn from here on out.
Unfortunately, I do rely on free resources at the moment because not currently it's running
from paycheck to paycheck.
So I simply do not have the means to pay for courses quite yet, especially the online stuff
gets really expensive really quickly.
Yes, that's true.
There we go.
I found his name, Mosch Hanadani.
All right, cool.
We should link him up in the, send me the link afterwards and I'll put it in the show
notes and I'll probably reach out to him and see if I can do an interview with him on the
podcast.
Yeah, no, all of those things are very true.
And I think what's gotten nice is something that's starting to get a little more traction
is the idea of purchasing power parity pricing.
That's always a hard one to say.
The idea being that depending on where you live, they will geofence the content, but
you will pay a smaller and lower amount based on where you live.
Somebody that's really great with us is somebody like Ken C. Dodds.
He's got all those courses about React and testing and all that kind of stuff.
And if I, living in South Africa, purchases one of these courses, I get a 60% discount
immediately just because of purchase parity pricing.
So I think that's something that the industry as a whole should consider more widely because
then they can make it, because I understand why people ask money for courses.
It's a heck of a lot of work.
And if you want to do it well, it's especially a lot of work.
And for some people, this is how they make a living.
But it is tough when you come from a third world country or you're just starting out
and you're still finding your feet and you don't have a bunch of money to invest yet.
It is hard.
And there's all kinds of other interesting things developing around that idea as well
with some academies and stuff in the United States exploring a different way of paying
for your courses.
But that is everything.
I think the thing that I get from you is that one big thing that's missing is a roadmap
that you can look at, which points you at specific learning material based on where
you are along your path.
And also which path you're on.
Are you on a backend path?
Are you on a full stack path or are you more on a front end path?
Because you'll have different milestones and different learning material needs there.
So I think that is something that we should look into, see if there are some resources
to help there.
Yeah, no, definitely.
Because being in the front end developer, I've been working, learning, and then I reach
a point and I just look at everything online.
What now?
Do I just invest my time into CSS?
Do I just continue HTML, Java?
What next?
What do I need to do?
What do I need to find?
So I ended up spending two to three hours searching for stuff to learn, running out
of steam, learning for an hour or two, and then continuing with my day rather than having
to go somewhere and spend those hours more, an hour finding this and this and this is
what I need.
And then two to three hours of learning whatever needs to come next.
Yeah.
Yeah.
I think communities such as the Mycelium network can also help there if we, especially if we
can get some more mentors to join our Discord server and then where we're talking about
the idea of having some meetups virtually and in person where possible.
I think that'll help because there you can pose these kinds of questions and, you know,
talk with other people and often more often than not somebody else is being where you
are and they can say, Oh, I actually found this thing and it can kind of help you on
your way.
So I think investing in community and joining in on these communities and being active,
I think is one of the ways that we can start solving this roadmap problem, but we have
to get people from then on learning and people who are teaching in the same place.
A nice mixture of two so you don't have too many mentors and too little.
So yeah, definitely.
And it's, as quite a shy guy, it's almost very difficult for me to enter the community.
Yes.
I don't know why I've always had this thing about online communities, even during my
leisurely hours when I have gaming and stuff.
I would not communicate with both people on the server.
I just find it strange, you can say.
So that was quite difficult for me.
But what I found is you just jump in, find one thing you like, just drop a comment and
see what happens because after that first comment you find it's actually not that
intimidating or scary.
You can just go.
Yeah, that's very true.
And a lot of that comes down to also the people running the community, right?
If you're focused and you start off with good community guidelines and you clearly
enforce them, it helps a lot because there are, you know, bundles out there that just
want to come and, you know, sour the pot.
But as long as there's people that have their finger on the pulse and can quickly
pick that up and make sure that those people are either kicked or reprimanded in a way
that they understand that that kind of behavior is not welcome and their continued
participation is going to hinge very heavily on them changing their attitude.
I think that is important and it's something that unfortunately has been a little rough
on the internet, to put it mildly.
Places got very toxic very quickly.
And for me and you, it might be a little bit easier than for some genders and people of
different races and ethnicities.
For them, it's even harder to really feel comfortable in these groups.
So, you know, big challenges that we have, but as long as we acknowledge them, then at
least we're in the right direction.
I think if you've mentioned a lot of, you've touched on a lot of the stuff from this, the
next question I had in mind, but I'm going to pose it anyway, just in case there's
anything else.
So having talked about all of these resources and stuff.
So clearly there's a bunch of things that don't work, but there are things that work.
But if there's anything else that you feel on that doesn't work to the great side that
you want to highlight.
The work that not works so great is a bit difficult.
Does not work so great.
The only thing I'm personally really stuck on is feeling lost.
You're this drop that falls into an ocean.
I'm just going to told swim.
You don't know where you're going.
You don't know which way.
You don't know if you should swim down or up or what's going on.
That's the only thing that's really missing for me.
But that said, I do have you as a mentor as well.
So I don't feel that lost.
If I get stuck, I can meet up and just say, hey, listen, this is going on.
How can we resolve this?
Yeah.
So clearly that's the important thing to have and to nurture is this whole mental relationship.
So do you think that there's a lot of value there that I think a lot of people miss?
Yeah.
That's so bad to say.
That's definitely something that's missing is finding someone you can ask a question
to, to just ask, how do you add a heading in HTML and not him having a laugh at you
and just saying, oh, okay, let's help you.
This is how we do it.
This is why we do it.
But I did not feel that personally because I did start my journey with you.
So I had that from the get go, but I can really see that being missing in a lot of people's
startup, you can often have same.
Yeah.
Yeah.
No, for sure.
That's true.
I mean, I, I've been there also, and I know that I actually searched widely to try and
find, is there any like networks or mentorship programs or anything like that, that you can
join?
And there are some now, to be honest, that I should probably mention on, I'll put some
of the links to some of them in the show notes.
Some stuff like Outreachy is really, really great.
And they also focus on being very inclusive.
So, you know, Outreachy does some amazing work and there are some other mentorship programs
as well.
But unfortunately, some of the mentorship things again, comes with a cost, which is
understandable.
But again, if you're not, if you're not in a position to be able to pay, it is just another
roadblock you have to face.
And, you know, even though web development specifically, that's what I can talk to mostly,
I've come a heck of a long way since the day was when I started.
And a lot of things that used to be super hard are now trivially simple.
It's still not easy.
There's still a lot of questions that that one has.
So, you know, the need for that still exists very much.
No, it definitely does.
As for the roadblock of the payment is I have looked into teaching myself in general.
So, startup courses for old people or women, especially in my area, don't really know how
computers work.
That was a big thing for me.
A lot of female, older women don't know in the area.
So, I was looking to make something for them to teaching how computers work.
And I completely understand why you charge so much for a course.
It's a lot of hard work.
It's a lot of information gathering and this and that and you need to remember this.
And even once I was ready to start, I still felt like I still have to go through a couple
of things and make sure.
Yeah, I can totally understand why, but not having the funds necessarily available to
you by, let's say $60 for an advanced course you know will help you.
It's quite a hindrance because now I have to go search.
How can I get this information for free?
Yeah.
No, for sure.
No, I completely agree with that.
And the other thing with courses, of course, is that you have to, especially if you're
asking money, is you have to keep it up to date.
It's not something you make and then forget about because, you know, the tech industry
evolves and moves quite fast.
So, you know, that's the other part is if you want to keep it, if you want it to be
useful, you have to keep it up to date.
That is something as well, because I was following books from Microsoft.
I was lucky enough to get access to those books and they fell into that trap.
I would learn and learn and learn and learn at some point and I'll hit a roadblock.
As being, what's this?
It's not working.
What's going on?
And I have to go search for hours and hours and hours just to find out.
This phrase is no longer valid.
Simply change X to Y and it works.
Yeah.
So that is definitely a pitfall I can see some people falling into not keeping everything
up to date.
And it is frustratingly again for us who is new and learning these things because now
where you would know this or know where to look for it, I need to spend two or three
hours trying to find out why it's not working.
What's going on?
What's this error?
Yeah.
Yeah, for sure.
But teeing off the thing where you said you were looking at creating some courses to teach
people other skills that you already have.
I think in general, that is a good idea and that's something that a lot of people knew
to development.
This doesn't matter what industry it is, are a little bit scared of, but that I would
personally encourage is to write about the stuff that you learn because teaching is one
of the best ways of learning.
So if you've built something, anything, write about how you made it.
It doesn't necessarily have to tell a story per se about the struggles you had.
It can literally just be you writing down how to make a responsive Euro with HTML and
CSS, because by doing that, you are thinking through the process of having done that.
Oftentimes you find ways that you can do it even better than what you've already done
it.
So you automatically improve your existing code base.
And at the end of the day, you have a piece of writing that can also be useful for whether
you start a business or whether you're looking for employment.
You have something to point people to, to say, not only did I make this thing, but I
wrote about how I did it.
Because there's not a lot of people that can do both of those things.
A lot of people are really good at writing the software, but they're not so great at
teaching it.
And more often than not, it's not that they don't have the skills.
They just never exercise that skill.
So as they exercise their coding skill, they don't exercise writing about their coding.
And so that kind of never develops.
So you have this amazing software engineer, but if he tries to explain something to you,
it's like poop right over your head because they never go back and think about how did
what did I do before I knew how to do this?
How did I get to that point?
What was the things that I, what were the things I did wrong and how did I find a better
way and stuff like that.
So I think while you're learning, writing about the stuff that you make is incredibly
important.
You just gave me a great idea to maybe branch off of my existing URL to start something
to score RWA's journey.
Just a place we can write, I made a navigation bar today by using this, this, and this.
I hit this roadblock, but I found this information there.
So if someone does read it, they can say, that's my problem.
So I can just go look over there to go fix it.
Because something I hit a hard roadblock with is including JSON into my project.
So everyone is just like, no, just add it, just install it, just do it.
I'm like, yeah, how, how do I do this?
And after like two or three hours, I was like, oh, I just make a text file, change the name
and paste the stuff in and include it into my job and bam, bought your uncle.
Then again, just that little bit of knowledge I couldn't find for about two to three hours
because everyone just explains how to use it, not how to implement it.
Yeah.
Gotcha.
Gotcha.
And it's literally because people just don't think that far back anymore.
For them using JSON is just a thing you do.
Like it's just text.
What are you, what are you talking about?
But it's like, no, but if you don't know what JSON is and how it fits into the larger
framework of building a, let's take, for example, the one tool that I built, developer
tool chest, all that is in the end of the day is a website that loads some JSON that
has a specific structure and it loops through them.
And for each entry, it makes little block based on the search filter that you typed
in.
But if you don't know how JSON fits into that whole thing, it can be like, wait, what
is this JSON now?
Is it a database?
It's like, kind of, not really.
So, you know, it's, it's understanding that no, JSON is just a flat text file that has
certain limitations placed upon it.
And JSON in the end is data.
So this is like the data part of your project.
You describe data inside your JSON document, and then you can consume it as if it's like
a database, kind of, just a very, very loose database.
Like, I don't know if you've ever looked up SQLite, but if you, if you haven't, doesn't
matter, just maybe after the podcast, just have a search for SQLite and SQLite is essentially
just a flat text file on your hard drive that acts as a database, but you can query the
data as if it's SQL.
That's why SQLite.
And like, it's in everything.
It's in everything, like your mobile phone, your everything.
It's everywhere.
SQLite is like everywhere.
Okay.
And I already opened a tab over here for after we're done.
So that's, that's one of those great reads.
And that also reminded me, that's something I see a lot of mentors
fall, I want to say fall short, but I don't know if that's the right word.
That's why I like following Mosch.
He says, use an H1 tag to add a title.
And a lot of people just move on.
But for me personally, I want to know why.
What does it do?
How does it work?
And what he does is he pulls up on the graph and tells you H1 does this.
It adds a title.
It does this.
This is how you use it.
This is how you can use it.
So that is something I've been struggling with as well.
Because I've been following someone doing a text adventure game.
Because that was interesting to me.
This guy would just type, no, use this, this, this, enter.
And go to the next thing.
I'm like, wait, why?
Why did you do this?
How does this work?
You didn't explain to me anything.
You just wrote code on a little pad and moved on.
So he didn't actually teach me anything.
You just showed me what he can do.
Yeah.
Yeah.
Yeah.
And I guess there's a place for that, but I think more often than not, you find that
a lot on Twitch, like a lot of people on Twitch would stream them working and the idea is
not, you might pick up some stuff by watching, but that's not their intent.
Their intent is just like, I'm doing some stuff and maybe I want to be held accountable
and therefore I will stream every day between five and seven and I'll work on this specific
project.
It's more a way of keeping themselves accountable.
And if somebody learned something out of it, then great.
But that's not the intent.
But yeah, that's all good stuff.
So I'm wondering, so looking towards the future, say I'm going to, it was two separate
questions, but I think I'm going to throw it into one question.
Okay.
So you can do one or two things, like you can learn and learn and learn and eventually
apply for a job and work for somebody else, or you can do the other thing, which is create
your own opportunity by starting your own business, whether that is building a product
or starting an agency where you create websites and design for other people.
But I think in both of those areas, it doesn't really matter which one you choose.
This idea of an interview is part of both.
The difference being on the one hand, you're interviewing for a specific position at a
specific company, the other one you're being interviewed by a client who wants to know
that if I give you money, I'll get a website in return.
So therefore I need to, you know, I'm just not blindly going to give you money.
I want to speak to you a little bit.
And it's also a kind of an interview.
So my question is, which one of the two is of most interest to you, like starting a
business or working for somebody?
And based on that, what is the things about these interviews that perhaps scare you a
little bit?
Okay.
Personally, I would like to start my own business.
I walked out of high school into my permanent job, working for about three years as a retail
salesperson.
And after that, I got the opportunity for better hours, more pay doing school photos.
So I've been working there for three years now as well.
So I've been basically working since I got out of high school and I've reached a point
where I had enough of making someone else rich.
I've got a lot of knowledge.
I've got a lot of experience with a lot of things.
I do feel like I want to start my own thing.
And I want to get away from working for someone else.
I want to start my own business.
I want to start doing my own thing, which I already have started.
I'm still looking for clients now.
I've got one client pending.
We still need to do this interview you're talking about.
But having about three years worth of sales experience, the interview is a fun part for
me.
I look forward to it and it's exciting.
I can definitely see the scary bits of it, having to explain to someone why to use you.
But what I always found in sales is if you use the term faker to make it, you can sell
a pen to a pen factory.
If you're standing up to smile and they ask you, can you do back-end development and do
this whole database thing?
And tell them, yeah, sure.
I do have to do some research.
I do need to freshen up on a couple of things, but let's talk, let's see what you can do.
And I'll tell you yes or no, I can or cannot assist you.
Then the client's more likely to use you if you're honest about things like that.
Because they don't feel you're trying to scam them out of money.
They do feel like, okay, yeah, I do know what I'm doing.
I just need to sharpen up.
So then already feel like, Oh, okay.
So you're not just someone making, looking for a quick buck.
You're actually interested in the work.
Yeah.
Honesty goes a long way in business.
That's for sure.
And I mean, I say that knowing full well that the business industry can be a bit of a cut
throat industry as well, but I think you have to have morals for yourself and for your business.
Like me personally, for me as well, I have very fine lines of the type of clients I'd
be willing to work with and ones I wouldn't be willing to work with.
And I think there I shield myself a little bit from this cutthroat, like it's all about
the money kind of thing.
Yeah, I think it's great.
I think it's great to be honest and open that, sure, I can do this.
This specific part of the project might be a little bit more challenging, but I have
enough experience in how to find answers.
That's what I do is I find solutions to problems.
The technology is almost kind of the easy part.
Mentally finding a solution is lots of times harder than actually writing the code.
It's understanding what is the problem that the client's facing?
How do I best solve this?
And then what technology do I need to employ in order to solve this?
Because oftentimes people will come to you with a preconceived idea in their head because
they've heard it from a friend, but it might not necessarily be the best solution for them.
There might be something better that's come along since their friend did their thing.
Their friend might actually also benefit from your services.
Because they might not know that there's a better way to do this now.
They could actually save their money or help them grow their business faster.
I'm always excited when I hear people wanting to start their own businesses, because
if we look at unemployment in the world, the need for jobs is massive.
For each of us that starts our own little business and start networking with each other,
we're creating opportunities for ourselves.
But down the line, we're creating opportunities for others.
And the nice thing about somebody like yourself, for example, starting a business is you know
the pain of having to learn this stuff and having to find a job where people say,
Oh, how much experience do you have?
While working experience, not yet, but I've done all these and I, Oh, no, no, no.
We're looking for something five years experience.
Sorry.
So you'll be more open to listening to somebody and giving them a chance and telling them,
you know what, come work, I'll pay you a full salary for a month and let's see how it goes.
If by the end of the month, I can see that you could do the job.
Well, and let's just keep going.
But if I find that after a month that you can even struggle, but if you're willing to learn
and you're willing to do what's necessary to get the work done, I'm happy to, to employ you.
I think the more that we can get that, that kind of thing going the better.
Yeah.
And that sense, that is something I find very difficult.
I've been on a lot of platforms like Upwork and so on looking for jobs and I find stuff
and I look at it and I'm like, I can do this.
I can do everything you need.
I have all the requirements.
I've got the technology.
I've got the background.
I've got internet connection.
I've got all of this.
The only thing I'm lacking is the three years of experience I must have you're looking for.
Yeah.
And finding that one person that says, hey, listen, this is your opportunity.
Just try, let's see what you can do.
That's all you need.
That's all you need.
That one guy that just says, I'm willing to give you a month's worth of work.
Let's see what you're doing.
How are you doing?
How are you handling this?
On a little bit of a side tangent, the interview, just circling back to the interviews,
I do have some advice for people.
I turn it around.
If I have a client comes to me, they, I can just find my wording.
I am interviewing them.
I get them to tell me what they need.
I get to tell them what they, get them to tell me what they are looking for,
what they are looking to do.
So, they'll come to me on three pages.
I want this done.
I want that done.
I want this there.
They'll be like, okay, well, this, I can do for you.
This, I can do for you.
It's very difficult.
It takes long.
So, you are going to be charged more for this because instead of just a quick, quick hours
worth of work, this can take me about three or four hours.
But I can do it another way for you.
So, instead of sitting there and wondering like I'm being interviewed, I turn it around.
I ask them, what are you looking for?
What do you want?
What do you want out of this website?
Because obviously I can say whatever I want.
And I might just go off in a site engine for an hour,
just speaking about myself and what I did, not answering any questions.
Where if I tell the client, what's your question?
Then I answer.
What's your next question?
And I answer.
And you ask a question, I say something.
You're like, wait a second.
This is not how it works.
We can't do it this way.
We can do it this way, this way, or this way.
Clients love having options.
So it's, you pretty much flipped the interview around and you're interviewing them now.
Because at the end of the day, you do need to know from them what you need to do.
And having that person just ask you the entire time, what do you want?
What are you looking for?
Yes, I can do this for you.
No, I cannot do this for you.
Feels a lot easier than I sell websites.
I make websites, go look over there.
I can make a navigation bar.
I can, then you change it all from me, me, me to them.
And you change the focus point around on them.
And I feel very special if I can state it like that.
Yeah, no, for sure.
No, that's, that's great advice.
Yeah.
Thanks for sharing that.
This was really cool.
I really enjoyed this.
I'm looking forward to seeing where you go and what you do with your business.
So before we officially wrap it up, is there any projects you're currently
working on that you'd like to tell everybody about, this can be open source,
can be side projects, doesn't matter, client projects that you can talk about.
Or any like links that you'd like people to, to know about.
And of course we'll have them all also in the show notes, but if you want to give
some specific shout outs, then go for it.
Not quite at the moment.
I do have a client outstanding that it is going, everything points are going
to use me to create their website.
They do work with aluminum and door frames and they install them for
different houses all around our area here in Pretoria.
So I will love to share that journey.
Like you said, I would love to make a blog for a journey of how I will create that.
But as of now, I still need all the information.
So I haven't started yet, but I have started planning.
I have started looking at designs and color schemes and stuff like that.
The only current project I do have is my own website, which is rwswebdesign.co.za.
It is currently live.
I have been communicating with our community, improving some stuff, changing
grammar, updating some of my graphics.
And I do keep it up to date because this will be my private business website.
From here on.
That's great.
Can you just repeat that URL for us?
That's rwswebdesign.co.za.
Okay.
rwswebdesign.co.za.
Go check it out, folks.
So other than that, the side projects I don't really have at the moment,
I would like to give a shout out to freecodecamp.org.
You actually gave me this site a bit earlier this week, I think.
It's an amazing platform so far for me to learn.
They do start from the very basics, which is a bit annoying.
But I got about four or five exercises in,
and they've already taught me something new of the basics I didn't know.
So far, it feels like an amazing tutorial, especially for beginners to start at,
because they start simple, easy to understand.
They've got documentations and all of that good things.
Yeah.
Yeah.
The great thing about Free Code Camp is, well, it's free, but
beyond that, it's built by a community of contributors.
So one, it's kept up to date, constantly being improved.
And you yourself, like Riku, that's learning, you can contribute back to that project,
even if it's just a small thing where you maybe find the wording of something not
as understandable as you'd like to be.
It's an open source project.
You can fork it, open a pull request and propose something that you feel would improve it.
So I think it's really great to be involved with projects like that.
And as one of the other ones that I will give a shout out to,
because I'm quite involved with them, that is in the same vein.
It's an open source project.
All the content is right there.
It's community written.
There are some people paid to work on it, but it's a massive open source project.
So I think being involved in these projects is great.
And there's a lot of wonderful people behind these projects that would be
happy to receive pull requests.
So I can personally send an invitation to everybody listening to you.
Both go check out Freecamp and MD and web docs on GitHub and on the web and learn, contribute.
It's all good.
It's all a learning experience.
So yeah, thanks for sharing that.
So yeah, no, there's something I would like to go back and actually donate to Freecamp
if, not if, when my business takes off.
When I become a success, I would love to go back and actually donate to them.
And that is something I am very appreciative of them.
They don't cap their learning based on pay gates.
You are busy working and it pops up like, hey, listen, would you like to donate?
I just look ashamed like, no, not now.
Maybe once my first site takes off and I've made my first sale,
I'll come back and I'll come donate something.
Oh yeah, I've totally done that.
I've totally done that with a couple of open source things where
it's been just like, I wouldn't be where I am without it.
And so now that I am where I am, I totally just go and do a monthly,
like set up a monthly donation because I want it to be around for the next generation
and I want it to keep improving.
So yeah, I think that's great that you're also
already preparing yourself for doing that.
It's great stuff.
Well, thanks Rico.
It was really great.
Thanks for being the first guest on the MyCDA network podcast.
I hope this is going to be one of many, many, many, and we'll do one again once
your business is huge and you've got like hundreds of employees.
No, it's been great.
Thank you for having me.
It's been quite an experience.
Always nice to sit and speak to someone about these kinds of things.
Yeah, not just sitting in your own mind, just thinking about all of this stuff
and just feeling stuck.
So I would actually recommend it for shy people as well.
Get a community, join a community, and just start speaking with people.
It really lightens the load if you say it like that.
Yeah, it's been quite a pleasure.
Same for me.
Thank you for listening to this episode of the Mycelium Network network podcast.
If you're not already, please subscribe, store, and leave a review for us in your
podcatcher of choice.
This helps others find us and helps us make a better podcast for you on this earth.
You can also find and follow us on twitter at NetworkMycelium
and join the community on tescue.
All the links are available in the show notes.
